// using "jQuery" here instead of the dollar sign will protect against conflicts with other libraries like MooTools
jQuery(document).ready(function() {

    //Set default Jacked ease
    Jacked.setEase("Expo.easeOut");
    Jacked.setEngines({
        firefox: true,
        opera: true,
        safari: true,
		ios: true
    });
    jQuery.easing.def = "easeOutExpo";
    jQuery.wiseguys();

});

// plugin structure used so we can use the "$" sign safely
 (function($) {

    //main vars
    var mainContainer;
    var contWidth;
    var contHeight;
    var prevContHeight;
    var prevContWidth;
    var isMobile;
    var isHomePage;
    var pageLayoutType;
    var mouseX;
    var mouseY;
	var isIE8;
	var isBoxedLayout;
	var menuFirstLoad;
	

    //Blur vars
    var blurRadius;
    var IEBlurRadius;
    var supportsCanvas;
    var browser;

    //menu
    var subArrow;
    var subArrowTimeout;
    var subArrowUp;
    var curMenu;
    var subArrowXPos;
    var subArrowDestWidth;
    var destArrowX;

    //bg
    var img;
    var imgWidth;
    var imgHeight;
    var winWidth;
    var winHeight;
    var widthRatio;
    var heightRatio;
    var widthDiff;
    var heightDiff;
    var scrollTop;
    var bgImage;
	var bgType;

    //Featured Carousel
    var hasPortfolioCarousel;

    //Blog Carousel
    var hasBlogCarousel;

    //isotope
    var isIsotope;
    var isotopePagination;
    var isotope3Col;

    //button slider
    var likeboxTimeout;
    var likeToolbox;
    var buttonSliderOpen;
	
	var miniSliderHasResized;

    // class constructor / "init" function
    $.wiseguys = function() {

        // write values to global vars, setup the plugin, etc.
        supportsCanvas = (document.createElement("canvas").getContext) ? true: false;
        browser = Jacked.getBrowser();
        isMobile = (Jacked.getMobile() == null) ? false: true;
		isIE8 = Jacked.getIE();

        blurRadius = 50;
        IEBlurRadius = 25;
        scrollTop = 0;
		winWidth = $(window).width();
        
        isIsotope = false;
		menuFirstLoad = true;
		miniSliderHasResized = false;

        //container
		isBoxedLayout = $('body').hasClass('boxed') ? true : false;
        mainContainer = $('.container');
		
        isHomePage = (mainContainer.hasClass('home')) ? true: false;
        contWidth = mainContainer.width();
        prevContWidth = contWidth;
        contHeight = mainContainer.height();
        prevContHeight = contHeight;
		
		//fix section heading
		
		$('.carouselNav').parent().css({
			marginBottom: '20px' 
		});
		

        //menu
        subArrow = $('#submenuArrow');
        subArrowUp = $('.arrow-up');
		
		
		//menu check
		$('#smoothmenu li').each(function() {
				var l = $(this);
				
				if(l.hasClass('current-menu-parent') || l.hasClass('current-menu-item')){
																   
				   l.parents('li').addClass('current-menu-item');
				   
				}
				
		});
		
		
		
		if($('#smoothmenu ul:first-child > .current-menu-parent a').length){
           curMenu = $('#smoothmenu ul:first-child > .current-menu-parent a');
		}
		else if($('#smoothmenu ul:first-child > .current-menu-item a').length){
		   curMenu = $('#smoothmenu ul:first-child > .current-menu-item a');
		}
		else{
			curMenu = $('#smoothmenu ul:first-child > .current-menu-ancestor a');
		}
		
		//check if slider or fullwidth slider
		if($('#slider').length && $('.fullwidthbanner-container').length){
			$('#slider').attr("id", "fullwidthslider");
		}
		
		//background
		bgImage = mainContainer.attr('data-backgroundImage');
		bgType = mainContainer.attr('data-backgroundType');
		hasBgImage = bgImage.split('.').length > 1 ? true : false;
		
		if(bgType == 'image'){
		   loadBgImage(bgImage);
		}
		else if(bgType == 'color'){
			$('body').css({
			  backgroundColor: bgImage 
			});
			initRevolutionBanner();
		}
		else if(bgType == 'pattern'){
			$('body').css({
			  background: 'url(' + bgImage + ') repeat 0 0'
			});
			initRevolutionBanner();
		}

		//functions
		setFullBg();
        addOddClasses();
        initMenu();
        checkMenuWidth();
		initCarousel();
        initLightbox();
        initMiniSliders();

        initIsotopePortfolio();
        if (!isHomePage) {
            sortPageHeaderStyle();
        }

        initTabs();
        initAccordion();

        initPortfolioSingle();
        initButtonsSlider();
        initFaq();
        initTipsy();
        //initContactForm();
        handleGoogleMap();
		initFlexSlider();
		scaleIframes();
		initComparison();
		initBlogSearch();
		initNewsletter();
		makewpimagesresponsive();
		
		setTimeout(tweetMouseOver, 1000);

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //Force responsive for wp-images
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
	function makewpimagesresponsive(){
		$('[class*="wp-image"]').addClass('scale-with-grid');
	}
	
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //GET COOKIE FUNCTION
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
	getCookie = function(c_name){
		var i,x,y,ARRcookies=document.cookie.split(";");
		for (i=0;i<ARRcookies.length;i++){
			x=ARRcookies[i].substr(0,ARRcookies[i].indexOf("="));
			y=ARRcookies[i].substr(ARRcookies[i].indexOf("=")+1);
			x=x.replace(/^\s+|\s+$/g,"");
			if (x==c_name) {
				if( 'false' == y){
					return false;
				}
				return unescape(y);
			}
		}
		return false;
	}
	
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //NEWSLETTER SIGNUP
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initNewsletter() {
        if($('.widget_mailchimpsf_widget').length){
			
			var nl = $('.widget_mailchimpsf_widget');
			var lb = $('.mc_merge_var label');
			var ip = $('.mc_merge_var input');
			var txt = lb.text();
			
			lb.text('');
			ip.val(txt);
			
			ip.focus(function() {
                $(this).val('');
            });
			
            ip.blur(function() {
                if ($(this).val() == '') {
                    $(this).val(txt);
                }
            });
			

		}

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //MAKE IFRAMES RESPONSIVE
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initComparison() {

        if (mainContainer.find('article').hasClass('comparison')) {

			$('.comparison').each(function() {
				var c = $(this);
				
				c.parent().not('.last').css({
					 marginRight: '2px'
				});
				
				c.parent().css({
					 width: c.css('width')
				});
				
		
				
				if(c.find('.noheader').parent().parent().hasClass('onefourth') && winWidth>=1000){
					
					c.find('.noheader').parent().parent().css({
						 width: '201px',
						 marginRight: '2px'
					});
						  
				}
				else if(winWidth>=1000){
					c.find('.noheader').parent().parent().css({
						 width: '200px',
						 marginRight: '2px'
					});

				}
				
				if(winWidth>=768 && winWidth<1000) {
					c.find('.noheader').parent().parent().css({
						 width: '200px',
						 marginRight: '2px'
					});

				}
				else if(winWidth>=480 && winWidth<768) {
					c.find('.noheader').parent().parent().css({
						 width: '420px',
						 marginRight: '2px'
					});

				}
				else if(winWidth<480) {
					c.find('.noheader').parent().parent().css({
						 width: '300px',
						 marginRight: '2px'
					});

				}
				
			
				
			});

        }

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //MAKE IFRAMES RESPONSIVE
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function scaleIframes() {

        if (mainContainer.find('section').hasClass('blogIframe')) {

			$('.blogIframe').fitVids();

        }

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //FLEX SLIDER
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initFlexSlider() {

        if (mainContainer.find('div').hasClass('flexslider')) {
			
			
			var s = $('.flexslider');
			var useArrows = s.attr('data-arrows') == 'true' ? true : false;
			var useThumbs = s.attr('data-thumbnail') == 'true' ? true : false;
			
			if(!useThumbs){
				s.css({
					 marginBottom: '10px' 
				});
			}

            s.flexslider({
                animation: "slide",
                video: true,
                directionNav: useArrows,
				controlNav: useThumbs,
                start: function(slider) {
                    //$('body').removeClass('loading');
                    }
            });

        }

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //TIPSY TOOLTIP
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initTipsy() {

        mainContainer.find('.tooltip').each(function() {

            var t = $(this);

            t.css({
                cursor: 'pointer'
            }).tipsy({
                gravity: 's',
                fade: true,
                offset: 5,
                opacity: 1,
                title: 'data-tooltipText'
            });

        });

    }
	
	
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //GOOGLE MAP
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function handleGoogleMap() {

        if (mainContainer.find('article').hasClass('gMap')) {

            var map = $('.gMap iframe')
                var gWidth = map.attr('width');
            var gHeight = map.attr('height');
            var ratio = gHeight / gWidth;


            if (contWidth == 1000 && gWidth != 695) {
                map.attr('width', 695).attr('height', Math.round(695 * ratio))
                } else if (contWidth == 768 && gWidth != 503) {
                map.attr('width', 503).attr('height', Math.round(503 * ratio))
                } else if (contWidth == 420 && gWidth != 420) {
                map.attr('width', 420).attr('height', Math.round(420 * ratio))
                } else if (contWidth == 300 && gWidth != 300) {
                map.attr('width', 300).attr('height', Math.round(300 * ratio))
                }
        }

    }
	
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //BLOG SEARCH
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initBlogSearch() {
         
       
        if ($('.searchfield').length) {

            var f = $('.searchfield');
			var v = f.attr("placeholder");
			var b = $('.searchbutton');
			var u = $('.widget_search form').attr("action");
			

            f.focus(function() {
                $(this).attr("placeholder", '');
            });
			
            f.blur(function() {
                if ($(this).val() == '') {
                    $(this).attr("placeholder",v);
                }
            });
			
			b.click(function() {
				if (f.val() != '' && f.val() != v) {
					var url = u+"?s="+f.val();
                    window.location = url;
                }			 
			});
			
			
			

   
        };
		
		

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //CONTACT FORM
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initContactForm() {
         
       
        if ($('.wpcf7-form').length) {

            var curVal;
			
			$('.wpcf7-form input').not('.wpcf7-submit').each(function() {
					var ipt = $(this);
					
					ipt.focus(function() {
						curVal = ipt.val();
						ipt.val('');
					});
					
					ipt.blur(function() {
						if (ipt.val() == '') {
							ipt.val(curVal);
						}
					});
					
			});
			
			
            $('.wpcf7-form .wpcf7-textarea').focus(function() {
                curVal = $(this).val();
                $(this).val('');
            });
			
            $('.wpcf7-form .wpcf7-textarea').blur(function() {

                if ($(this).val() == '') {
                    $(this).val(curVal);
                }
            });



            
        };
		
		

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //FAQ ACCORDION
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initFaq() {

        if (mainContainer.find('section').hasClass('faq')) {

            var faqItem = $('.faq').find('article');
            var toggle = $('.faq').attr('data-toggle') == "true" ? true: false;

            faqItem.each(function() {

                var t = $(this);
                var q = t.find('.question');
                var p = t.find('p');
                
				
                p.css({
                    //height: p.outerHeight() + 'px',
                    display: 'none'
                });
				

                q.click(function() {

                    var qs = $(this);

                    //if toggle option is on, remove previous section
                    if (toggle && !qs.hasClass('selected')) {

                        $('.faq .question').each(function() {
                            var qItem = $(this);
                            var p = qItem.parent().find('p');
                            if (qItem.hasClass('selected') && qItem != qs) {
                                qItem.removeClass('selected');
                                p.slideUp(500);
                            }

                        });

                    }

                    //open current slide
                    if (qs.hasClass('selected')) {
                        qs.removeClass('selected');
                        p.slideUp(500);
                        return;
                    } else {
                        qs.addClass('selected');
                        p.slideDown(500);
                    }

                });

            });

        };

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //LIKE/PLUSONE TOOLBOX
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initLikeToolbox() {

        if (mainContainer.find('div').hasClass('addthis_toolbox')) {

            var likeBtn = $('.like');
            likeToolbox = $('.addthis_toolbox');
            var position = likeBtn.position();

            likeToolbox.css({
                opacity: 0,
                display: 'none',
                left: position.left + 'px'
            });

            //mouse events
            likeBtn.mouseover(function() {
                clearTimeout(likeboxTimeout);

                if (likeToolbox.css('opacity') != 1) {
                    likeToolbox.css({
                        'z-index': 1000001
                    }).fadeInJacked();
                }

            });

            likeBtn.mouseout(function() {
                likeboxTimeout = setTimeout(hideLikeBox, 500);
                likeToolbox.css({
                    'z-index': 999999
                });
            });

            likeToolbox.mouseover(function() {
                clearTimeout(likeboxTimeout);
            });

            likeToolbox.mouseout(function() {
                likeboxTimeout = setTimeout(hideLikeBox, 500);
            });

        }

    }

    function hideLikeBox() {
        clearTimeout(likeboxTimeout);
        likeToolbox.fadeOutJacked();
    }
	

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //MENU
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initMenu() {
    	if( $('#smoothmenu').find('.menu').size() == 0 ) return;
    	
        ddsmoothmenu.init({
            mainmenuid: "smoothmenu",
            orientation: 'h',
            classname: 'ddsmoothmenu',
            contentsource: "markup"
            });

        var topMenuLinks = $('#smoothmenu ul:first > li > a');
        var subMenuLinks = $('#smoothmenu ul > li ul > li > a');

        //Don't even ask :D
        var lastMenuWithSubmenu = $('#smoothmenu ul:first > li > ul:last').parent();
		

        //main menu links listeners to deal with arrow animation
        topMenuLinks.mouseenter(function(e) {

            clearTimeout(subArrowTimeout);
			menuFirstLoad = false;

            subArrowXPos = $(this).parent().position();
            subArrowDestWidth = $(this).parent().width();
            destArrowX = subArrowDestWidth / 2 - parseInt(subArrowUp.css('width'), 10) / 2;

            if ($(this).html() == $('#smoothmenu ul:first > li > ul:last').parent().find('a:first').html()) {
                subArrowDestWidth += 1;
            }

            subArrow.jacked({
                left: subArrowXPos.left,
                width: subArrowDestWidth,
                opacity: 1
            }, {
                duration: 500
            });

            subArrowUp.jacked({
                left: destArrowX
            }, {
                duration: 500
            });

        });

        topMenuLinks.mouseleave(function(e) {
            if (!$(this).hasClass('selected')) {

                subArrowXPos = curMenu.parent().position();
                if( subArrowXPos == null ) return;
                subArrowDestWidth = curMenu.parent().width();
                destArrowX = subArrowDestWidth / 2 - parseInt(subArrowUp.css('width'), 10) / 2;

                subArrow.jacked({
                    left: subArrowXPos.left,
                    width: subArrowDestWidth,
                    opacity: 1
                }, {
                    duration: 500
                });

                subArrowUp.jacked({
                    left: destArrowX
                }, {
                    duration: 500
                });

            } else {
                subArrowTimeout = setTimeout(clearSubArrow, 100);
            }

        });

        //Handle menu arrow when leaving submenu
        subMenuLinks.mouseout(function(e) {

            subArrowTimeout = setTimeout(clearSubArrow, 100);
        });

        subMenuLinks.mouseover(function(e) {

            clearTimeout(subArrowTimeout);
        });

        //mobile select fall back
        // Populate dropdown with menu items
        $("nav a").each(function() {

            var el = $(this);
            var optSub = el.parents('ul');
            var len = optSub.length;
            var subMenuDash = '&#45;';
            var dash = Array(len).join(subMenuDash);

            $("<option />", {
                "value": el.attr("href"),
                "html": dash + el.text()
                }).appendTo("nav select");
        });

        $("nav select").change(function() {
            window.location = $(this).find("option:selected").val();
        });

        //set arrow first position
        subArrowTimeout = setTimeout(clearSubArrow, 2000);

    }

    //Remove menu arrow
    function clearSubArrow() {
    	
        subArrowXPos = curMenu.parent().position();

        if( subArrowXPos == null ) return;
		subArrowDestWidth = curMenu.parent().width();

        destArrowX = subArrowDestWidth / 2 - parseInt(subArrowUp.css('width'), 10) / 2;

			subArrow.jacked({
				left: subArrowXPos.left,
				width: subArrowDestWidth,
				opacity: 1
			}, {
				duration: 500
			});
	
			subArrowUp.jacked({
				left: destArrowX
			}, {
				duration: 500
			});
    }

    function checkMenuWidth() {

        var logoWidth = $('.logo').width() + 40;
        var availableWidth = contWidth - logoWidth;
        var menuWidth = $('.ddsmoothmenu').width();
        var mainMenu = $('nav #smoothmenu');
        var dropDown = $('nav form');
		var arrow = $('#submenuArrow');
		


        if (availableWidth >= menuWidth) {
            mainMenu.css({
                'visibility': 'visible',
				marginTop: 0
            });
            dropDown.css({
                'display': 'none'
            });
			arrow.css({
                'display': 'inline'
            });
        } else {
            arrow.css({
                'display': 'none'
            });
			mainMenu.css({
                'visibility': 'hidden',
				marginTop: '-999px'
            });
            dropDown.css({
                'display': 'inline-block'
            });
			
        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //PAGE HEADER STYLES
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function sortPageHeaderStyle() {
		

        var headerCont = $('.headerContent');
        var pageTitle = $('.pageTitle');
        var crumbs = $('.breadCrumbs');
        var headerType = headerCont.attr('id');
        pageLayoutType = headerCont.attr('data-layout');
        var tagLine = $('#tagLine');

        if (pageLayoutType == "image") {

            $('#blurMask').css({
                display: 'none'
            });

            headerCont.find('.headerContentContainer').css({
                background: 'none',
                textAlign: 'left',
                marginLeft: '20px'
            });

            tagLine.css({
                height: '69px',
                padding: 0,
                paddingLeft: '20px',
                textAlign: 'left'
            }).find('h1').css({
                display: 'none'
            });

            pageTitle.remove().appendTo(tagLine);

            crumbs.remove().appendTo(tagLine);

            alignPageTitle();

        } else if (pageLayoutType == "blur") {
        } else {
            //create colored bg
            $('#blurMask').css({
                display: 'none'
            });

            headerCont.find('.headerContentContainer').css({
                background: 'none'
            });

            $('.headerContentBg').css({
                backgroundColor: pageLayoutType
            }).removeClass('hidden');
			
			
			$('.headerContentBgBoxed').css({
                backgroundColor: pageLayoutType
            }).removeClass('hidden');

        }

    }

    function textWidth(txt, fontSize) {
        var html_calc = $('<span>' + txt.html() + '</span>');
        html_calc.css('font-size', fontSize + 'px').hide();
        html_calc.prependTo('body');
        var width = html_calc.width();
        html_calc.remove();
        return width;
    }

    function alignPageTitle() {

        var pageTitle = $('#tagLine .pageTitle');
        var crumbs = $('#tagLine .breadCrumbs');
        var tagLine = $('#tagLine');

        if (contWidth > 300) {

            if (pageLayoutType == "image") {

                pageTitle.css({
                    fontSize: '25px',
                    color: '#000',
                    marginTop: 0,
                    float: 'left',
                    marginLeft: 0,
                    lineHeight: '66px'
                });

                crumbs.css({
                    color: '#000',
                    float: 'right',
                    marginTop: '25px',
                    marginLeft: 0
                });

                tagLine.css({
                    height: '69px',
                    padding: 0,
                    paddingLeft: '20px',
                    textAlign: 'left'
                });
            } else if (pageLayoutType == "blur") {
            } else {
                $('.headerContentBg').css({
                    height: '200px',
                    top: '90px'
                });
            }

        } else {

            if (pageLayoutType == "image") {

                var tw = textWidth(pageTitle, 25);
                var cw = textWidth(crumbs, 12);

                pageTitle.css({
                    fontSize: '25px',
                    color: '#000',
                    marginTop: '21px',
                    float: 'left',
                    marginLeft: (300 - tw) / 2,
                    lineHeight: '30px'
                });

                crumbs.css({
                    color: '#000',
                    float: 'left',
                    marginTop: '5px',
                    marginLeft: (300 - cw) / 2
                });

                tagLine.css({
                    height: '100px',
                    padding: 0,
                    paddingLeft: '0px',
                    textAlign: 'center'
                });

            } else if (pageLayoutType == "blur") {
            } else {

                $('.headerContentBg').css({
                    height: '120px',
                    top: '200px'
                });

            }

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //REVOLUTION BANNER
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initRevolutionBanner() {
		
		/*
        var tpj = jQuery;
        tpj.noConflict();

        //tpj(document).ready(function() {
									 
	     if (mainContainer.find('div').hasClass('banner')) {

            if (tpj.fn.cssOriginal != undefined)
                tpj.fn.css = tpj.fn.cssOriginal;

            tpj('.banner').revolution({
                delay: 9000,
                startheight: 400,
                startwidth: 1000,

                hideThumbs: 0,

                thumbWidth: 100,
                // Thumb With and Height and Amount (only if navigation Tyope set to thumb !)
                thumbHeight: 50,
                thumbAmount: 5,

                navigationType: "bullet",
                //bullet, thumb, none, both		(No Thumbs In FullWidth Version !)
                navigationArrows: "none",
                //nexttobullets, verticalcentered, none
                navigationStyle: "round",
                //round,square,navbar
                touchenabled: "on",
                // Enable Swipe Function : on/off
                onHoverStop: "on",
                // Stop Banner Timet at Hover on Slide on/off
                navOffsetHorizontal: 0,
                navOffsetVertical: 4,

                shadow: 0,
                //0 = no Shadow, 1,2,3 = 3 Different Art of Shadows  (No Shadow in Fullwidth Version !)
                fullWidth: "off",
                // Turns On or Off the Fullwidth Image Centering in FullWidth Modus
                stopLoop: "off"
                // on == Stop loop at the last Slie,  off== Loop all the time.							
                });
			
			}
			

       // });
		*/
    }



    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //ACCORDION
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initAccordion() {

        if (mainContainer.find('ul').hasClass('acc')) {
			
			//var accordion;
			
			$('.acc').each(function(i) {
									
				var ac = $(this);
				var as = ac.find('.acc-section');
				var h = ac.find('h4');
				var activeS = null;
				var activeH = null;
				
				//collapse all content
				as.css('display', 'none');
				
				//click
			    h.click(function() {
					
					var c = $(this);
					var s = c.parent().find('.acc-section');
					
					if(!c.hasClass('acc-selected')){
						
						if(activeS){
							activeH.removeClass('acc-selected');
							activeS.slideUp();
						}
						
						c.addClass('acc-selected');
						s.css('opacity', 0).slideDown().animate({ opacity: 1 },{ queue: false, duration: 1000 });
						activeS = s;
						activeH = c;
					}
					else{
						
						c.removeClass('acc-selected');
						s.slideUp();
						activeS = null;
						activeH = null;
						
					}
					
				});
				
				
				
				
			});

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //BUTTONS SLIDER
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initButtonsSlider() {

        if (mainContainer.find('section').hasClass('buttons') && mainContainer.find('section').hasClass('buttonsSlider')) {

            $('.buttons').each(function() {

                var btns = $(this);
                var slider = btns.find('.buttonsSlider');
                var closeBtn = slider.find('.buttonSliderClose');

                buttonSliderOpen = false;

                //button events

                btns.find('ul li').each(function() {

                    var btn = $(this);
                    var attr = btn.attr('data-sliderContent');

                    //If we have some slider content
                    if (typeof attr !== 'undefined' && attr !== false) {

                        btn.click(function() {

                            if (!btn.find('a').hasClass('selected')) {

                                btns.find('ul li a').each(function() {
                                    var bt = $(this);
                                    if (bt.hasClass('selected')) {
                                        bt.removeClass('selected');
                                    }
                                });

                                btn.find('a').addClass('selected');

                                //first check if slider is open and close if it is
                                if (buttonSliderOpen) {

                                    slider.slideUp(500, function() {
                                        // Animation complete.
                                        slider.find('article').each(function() {

                                            var art = $(this);
                                            art.addClass('hidden');

                                            if (art.attr('id') == attr.split('#')[1]) {
                                                art.removeClass('hidden');
                                            }

                                        });

                                    }).slideDown(500);

                                    buttonSliderOpen = true;

                                }
                                else {

                                    //unhide targetted content
                                    slider.find('article').each(function() {

                                        var art = $(this);
                                        art.addClass('hidden');

                                        if (art.attr('id') == attr.split('#')[1]) {
                                            art.removeClass('hidden');
                                        }

                                    });

                                    //open slider
                                    slider.slideDown(500);

                                    btns.jacked({
                                        marginBottom: 0
                                    }, {
                                        duration: 500
                                    });

                                    buttonSliderOpen = true;

                                }

                            }

                        });

                    }

                });

                //close slider
                closeBtn.click(function() {
                    slider.slideUp(500);

                    btns.jacked({
                        marginBottom: 15
                    }, {
                        duration: 500
                    });

                    buttonSliderOpen = false;

                    btns.find('ul li a').each(function() {
                        var bt = $(this);
                        if (bt.hasClass('selected')) {
                            bt.removeClass('selected');
                        }
                    });
                });

            });

        }

    }

    function initSliderShare() {

        if (mainContainer.find('div').hasClass('addthis_toolbox_share')) {

            // Set-up to use getMouseXY function onMouseMove
            document.body.onmousemove = getMouseXY;

            var btns = $('.addthis_toolbox_share a');
            var tooltip = $('.addthis_toolbox_share').parent().find('.tooltip');

            btns.each(function() {

                var bt = $(this);
                var pos = bt.position();
                var left = pos.left;
                var top = pos.top;

                bt.mouseover(function() {
                    var btn = $(this);
                    var txt = btn.attr('data-tooltip');

                    $('body').find('.tooltip').remove();
                    var tip = $('<div />').addClass('tooltip').appendTo('body');
                    var t = $('<p />').text(txt).appendTo(tip);
                    tip.css({
                        position: 'absolute',
                        left: mouseX - tip.width() / 2 - 3,
                        top: mouseY - 55
                    }).fadeIn();

                    });

                bt.mouseout(function() {
                    $('body').find('.tooltip').remove();
                });

            });

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //TABS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initTabs() {

        //check if tabs exists
        if (mainContainer.find('div').hasClass('tabs')) {

            var coolTabs = $(".tabs");
            var auto = coolTabs.attr('data-autoPlay') == "true" ? true: false;
            var delay = parseInt(coolTabs.attr('data-autoDelay'), 10);

            coolTabs.tabs({
                show: function(event, ui) {
                    var lastOpenedPanel = $(this).data("lastOpenedPanel");
                    if (!$(this).data("topPositionTab")) {
                        $(this).data("topPositionTab", $(ui.panel).position().top)
                        }
                    // do crossfade of tabs
                    $(ui.panel).hide().css('z-index', 2).fadeIn(300, function() {
                        $(this).css('z-index', '');
                        if (lastOpenedPanel) {
                            lastOpenedPanel.toggleClass("ui-tabs-hide").hide();
                        }
                    });

                    $(this).data("lastOpenedPanel", $(ui.panel));
                }
            });

            if (auto) {
                coolTabs.tabs('rotate', delay);
            }

            }
			
			checkTabSize();

    }
	
	function checkTabSize() {
		
		if($('.tabs').length){
			
			$('.tabs').each(function(i) {
									 
				var t = $(this);
				var pw = t.parent().width();
				var list = t.find('ul').first();
				var items = list.find('li');
				var last = list.find('li:last-child');
				var a = t.find('ul li a');
				var itemsw = 0;

				items.each(function(i) {
					var l = $(this);
					var w = textWidth(l.find('a'), 14)+30;
					itemsw += w;
					
				});
				
				if(itemsw >= pw){
					
					list.css({
						height: 'auto'
					});
					
					items.css({
						  borderRight: '1px solid #ddd',
						  marginBottom: '2px',
						  float: 'none'
					});
					
					a.css({
						  display: 'block',
						  float: 'none'
					});
					
				}
				else{
					
					list.css({
						height: '40px'
					});
					
					items.not(last).css({
						  borderRight: 'none'
					});
					
					items.css({
						  marginBottom: 0,
						  float: 'left'
					});
					
					a.css({
						  display: 'inline',
						  float: 'left'
					});
					
				}
															
			});
			
		}
		
	}

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //LIGHTBOX
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initLightbox() {

        //Jackbox
        jQuery(".jackbox[data-group]").jackBox("init");

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //MINI SLIDERS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initMiniSliders() {
		
		if (mainContainer.find('div').hasClass('miniSlider')) {

			mainContainer.find('.miniSlider').each(function(i) {
	
				var mc,
				ul,
				total,
				nav,
				auto,
				interval,
				autoDelay,
				curBtn,
				curIndex,
				size,
				tempSize;
	
				ms = $(this);
				ul = ms.find('ul').first();
				total = ul.children().length;
				nav = ms.find('.miniNav');
	
				size = ms.parent().width();
				auto = (ms.attr('data-autoPlay') == 'true') ? true: false;
				curIndex = 0;
				
				
				//set ul width
				ul.css({
					width: total * size + 'px'
				});
				
	
				//create nav
				for (var j = 0; j < total; j++) {
	
					var navItem = $("<div />").addClass('miniNavBtn').appendTo(nav);
	
					navItem.mouseover(function() {
	
						var btn = $(this);
	
						if (!btn.hasClass('miniNavSelected')) {
	
							btn.jacked({
								backgroundPosition: {
									x: 0,
									y: -10
								}
							}, {
								duration: 500
							});
						}
	
					});
	
					navItem.mouseout(function() {
	
						var btn = $(this);
	
						if (!btn.hasClass('miniNavSelected')) {
	
							btn.jacked({
								backgroundPosition: {
									x: 0,
									y: 0
								}
							}, {
								duration: 500
							});
						}
					});
	
					navItem.click(function() {
	
						var btn = $(this);
	
	
						if (!btn.hasClass('miniNavSelected')) {
	
							
							size = btn.parent().parent().width();
	
							var index = $(nav.find('div')).index(this);
							curIndex = index;
	
							ul.jacked({
								marginLeft: -index * size
							}, {
								duration: 500
							});
	
	
							
							var curSel = btn.parent().find($('.miniNavSelected'));
	
							curSel.jacked({
								backgroundPosition: {
									x: 0,
									y: 0
								}
							}, {
								duration: 500
							}).removeClass('miniNavSelected');
	
	
							btn.addClass('miniNavSelected');
	
						}
	
					});
	
				}
	
				//set first nav over
				curBtn = nav.find('.miniNavBtn:first').addClass('miniNavSelected');
	
				if (auto) {
					autoDelay = parseInt(ms.attr('data-autoDelay'), 10);
					interval = setInterval(handleMiniAuto, autoDelay);
	
					//handle carousel mouse over to stop interval
					ms.mouseenter(function() {
						clearInterval(interval);
					});
	
					ms.mouseleave(function() {
						clearInterval(interval);
						interval = setInterval(handleMiniAuto, autoDelay);
					});
					
					
					$(window).resize(function() {
											  
						clearInterval(interval);
						curIndex = 0;
						curBtn = nav.find('.miniNavBtn:first')
						interval = setInterval(handleMiniAuto, autoDelay);
						
					});
	
				}
	
				function handleMiniAuto() {
					if (curIndex < total - 1) {
						curIndex++;
					} else {
						curIndex = 0;
					}
	
					ul.jacked({
						marginLeft: -curIndex * ms.parent().width()
					}, {
						duration: 500
					});
	
					curBtn.jacked({
						backgroundPosition: {
							x: 0,
							y: 0
						}
					}, {
						duration: 500
					}).removeClass('miniNavSelected');
	
					curBtn = $(nav.find('div')).eq(curIndex);
	
					curBtn.jacked({
						backgroundPosition: {
							x: 0,
							y: -10
						}
					}, {
						duration: 500
					}).addClass('miniNavSelected');
	
				}
				
				function handleMiniPrev() {
					
					if (curIndex >0) {
						curIndex--;
					} else {
						curIndex = total - 1;
					}
	
					ul.jacked({
						marginLeft: -curIndex * ms.parent().width()
					}, {
						duration: 500
					});
	
					curBtn.jacked({
						backgroundPosition: {
							x: 0,
							y: 0
						}
					}, {
						duration: 500
					}).removeClass('miniNavSelected');
	
					curBtn = $(nav.find('div')).eq(curIndex);
	
					curBtn.jacked({
						backgroundPosition: {
							x: 0,
							y: -10
						}
					}, {
						duration: 500
					}).addClass('miniNavSelected');
	
				}
				
				
				//add touch swipe event handlers only if viewed from mobile
				if (isMobile) {
					ms.swipe({
						swipe: function(event, direction, distance, duration, fingerCount) {
							
							if (auto) {	  
								clearInterval(interval);
							}
				
							if (direction == 'left') {
								handleMiniAuto();
							}
		
							if (direction == 'right') {
								handleMiniPrev();
							}
							
							if (auto) {	  
								interval = setInterval(handleMiniAuto, autoDelay);
							}
							
						}
					});
				}
				
				
	
			});
			
			
		
		}

    }
	
	function resetMiniSliders(){
		
		
		if ($('.miniSlider').length>0) {
			
			miniSliderHasResized = true;

			$('.miniSlider').each(function(i) {
										   
				var ms = $(this);
				ul = ms.find('ul').first();
				
				total = ul.children().length;
			    size = ms.parent().width();

				//set ul width/margin
				ul.css({
					width: total * size + 'px',
					marginLeft: 0
				});
				
				
				ms.find('.miniNavBtn').each(function(i) {
													 
					if($(this).hasClass('miniNavSelected')){

					   $(this).jacked({
                            backgroundPosition: {
                                x: 0,
                                y: 0
                            }
                        }, {
                            duration: 500
                        });
					   
					   $(this).removeClass('miniNavSelected');
					}
					
				});
				
				ms.find('.miniNavBtn:first').jacked({
                            backgroundPosition: {
                                x: 0,
                                y: -10
                            }
                        }, {
                            duration: 500
                        })
				
				ms.find('.miniNavBtn:first').addClass('miniNavSelected');
					
										   
			});
		
		}
		
	}

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //TWEETS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function tweetMouseOver() {
		
		if (mainContainer.find('div').hasClass('tweets')) {

			$(".tweets").find('li').each(function() {
	
				var tw = $(this);
	
				tw.mouseenter(function(e) {
	
					tw.find('.tweet_avatar').jacked({
						backgroundPosition: {
							x: 0,
							y: -10
						}
					}, {
						duration: 500
					})
	
					}).mouseleave(function() {
	
					tw.find('.tweet_avatar').jacked({
						backgroundPosition: {
							x: 0,
							y: 3
						}
					}, {
						duration: 500
					})
	
					});
	
			});
	
		
		}

    }

    function initTweets() {
		
		if (mainContainer.find('div').hasClass('tweets')) {

			var twitter = $(".tweets").tweet({
				join_text: "auto",
				username: "WiseGuysThemes",
				avatar_size: 48,
				count: 2,
				auto_join_text_default: "",
				auto_join_text_ed: "",
				auto_join_text_ing: "",
				auto_join_text_reply: "",
				auto_join_text_url: "",
				loading_text: "loading tweets..."
			});
	
			//wait 2 seconds that the tweet loads before we can add mouse over on dynamically generated list items
			setTimeout(tweetMouseOver, 1000);
		
		}

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //PORTFOLIO SINGLE
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initPortfolioSingle() {

        if (mainContainer.find('section').hasClass('projectNav')) {

            var projectNav = $('.projectNav');

            projectNav.find('.projectPrev').click(function() {

                var dest = $(this).find('a').attr('href');
                window.open(dest, '_self');

            });

            projectNav.find('.projectNext').click(function() {

                var dest = $(this).find('a').attr('href');
                window.open(dest, '_self');

            });

        }

    }

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //BACKGROUND IMAGE FUNCTIONS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function switchBgHolders() {
        if (bgHolderID == 'bgHolder1') {
            bgHolderID = 'bgHolder2';
            previousBgHolderID = 'bgHolder1';
        } else {
            bgHolderID = 'bgHolder1';
            previousBgHolderID = 'bgHolder2';
        }
    }

    function loadBgImage(bgImg) {
        //switchBgHolders();
        //document.getElementById("loading").className = "loading-visible";
        bg = $("<div />").css({
            position: "fixed",
            top: 0,
            left: 0,
            zIndex: -999
        }).appendTo($("body")),
        img = $("<img />").attr('id', 'bgImage').css({
            position: "absolute",
            display: "none"
        }).load(loaded).appendTo(bg);
        img.attr("src", bgImg);

    }

    function loaded(event) {

        event.stopPropagation();
        //document.getElementById("loading").className = "loading-invisible";

        if (supportsCanvas && $('.headerWrapper').find('#blurMask').length > 0 && $('#fullwidthslider').length < 1) {
			
            stackBlurImage('bgImage', 'blurCanvas', blurRadius, false, 100);
        } else if ($('.headerWrapper').find('#blurMask').length > 0 && !$('#fullwidthslider').length){
			

            $(document.createElement("img")).attr({
                src: bgImage
            }).css({
                'float': 'left',
                'position': 'absolute',
                'left': -IEBlurRadius + 'px',
                'top': -IEBlurRadius + 'px',
                'width': getResizedImgWidth() + 'px',
                'height': getResizedImgHeight() + 'px',
                'filter': 'progid:DXImageTransform.Microsoft.Blur(pixelRadius=' + IEBlurRadius + ')',
                '-ms-filter': 'progid:DXImageTransform.Microsoft.Blur(pixelRadius=' + IEBlurRadius + ')'
            }).appendTo($('#blurMask'));

        }

        handleWindowResize();

        img.unbind("load", loaded).fadeIn();
		
		//we could remove this by loading switcher.js after wiseguys.min.js
		var patternCookie = getCookie('tmplPattern');
		var solidBgCookie = getCookie('tmplSolidBg');
		if(patternCookie || solidBgCookie){
			$('#bgImage').css('visibility', 'hidden');
		}

        initRevolutionBanner();

    }
	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //CAROUSEL
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
	function initCarousel(){
		
		//first check if there is a carousel
		if(mainContainer.find('ul').hasClass('carousel')){
			
			var c = mainContainer.find('.carousel');

			//then check if blog or portfolio carousel
			if(c.hasClass('portfolio')){
				hasPortfolioCarousel = true;
				initPortfolioCarousel();
			}
			if(c.hasClass('blog')){
				hasBlogCarousel = true;
			    initBlogCarousel();
			}
											 
		}  
		
	}

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //BLOG CAROUSEL
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function initBlogCarousel() {
		
        $('.carousel.blog').each(function() {
											   
			var blogCarousel = $(this);
			var isSmallBlogCarousel = blogCarousel.parent().hasClass('small') ? true: false;
			var isHalfCarousel = blogCarousel.parent().parent().hasClass('onehalf') ? true: false;
			
			//We only allow .one and .onehalf for large carousel, so first check that, if not show message
			if(!isSmallBlogCarousel){
				if(!blogCarousel.parent().parent().hasClass('one') && !blogCarousel.parent().parent().hasClass('onehalf')){
					$('<h4>ERROR!</h4><p>Only .one and .onehalf carousel are allowed!</p>').appendTo(blogCarousel.parent());
					blogCarousel.remove();
					return;
				}
			}
			
			
			var blogNext = blogCarousel.parent().parent().find('.carouselNext');
			var blogPrevious = blogCarousel.parent().parent().find('.carouselPrevious');
			var blogCarouselWrapper = blogCarousel.parent();
			var blogNav = blogCarousel.parent().parent().find('.carouselNav');
	
			var blogItemTotal = blogCarousel.children().length;
	
			var blogItemWidth = isSmallBlogCarousel ? 339: 470;
			var blogItemHeight = isSmallBlogCarousel ? 126: 169;
			var curBlogMarginDest = 0;
			var blogAuto = blogCarousel.attr('data-autoPlay') == "true" ? true: false;
			var blogIntervalDelay = parseInt(blogCarousel.attr('data-autoDelay'), 10);
			var mouseOverBlogNav = false;
	
			//make sure carousel has margin=0
			resetBlogCarousel();
	
			//get number of featured item currently showing
			//setBlogShowing();
			//calculate animation margins
			setBlogAnimationMargins();
	
			//set up item counting
			var blogLeftRemaining = 0;
			var blogRightRemaining = blogItemTotal - numBlogShowing;
			
			var numBlogShowing;
			var blogInterval;
	
			blogNext.click(function() {
				handleBlogNext();
			});
	
			blogPrevious.click(function() {
				handleBlogPrevious();
			});
	
			//auto play
			if (blogAuto) {
	
				//setup interval
				clearInterval(blogInterval);
				blogInterval = setInterval(handleBlogNext, blogIntervalDelay);
	
				//handle carousel mouse over to stop interval
				blogCarouselWrapper.mouseenter(function() {
					clearInterval(blogInterval);
				});
	
				blogCarouselWrapper.mouseleave(function() {
					clearInterval(blogInterval);
					blogInterval = setInterval(handleBlogNext, blogIntervalDelay);
				});
	
				//handle navigation mouse over to stop interval
				blogNav.mouseenter(function() {
					mouseOverBlogNav = true;
					clearInterval(blogInterval);
				});
	
				blogNav.mouseleave(function() {
					mouseOverBlogNav = false;
					clearInterval(blogInterval);
					blogInterval = setInterval(handleBlogNext, blogIntervalDelay);
				});
	
			}
	
			if (isMobile) {
				blogCarouselWrapper.swipe({
					swipe: function(event, direction, distance, duration, fingerCount) {
						if (direction == 'left') {
							handleBlogNext();
						}
	
						if (direction == 'right') {
							handleBlogPrevious();
						}
					}
				});
			}
			
			function handleBlogNext() {
	
				clearInterval(blogInterval);
		
				if (blogRightRemaining > 0) {
		
					setBlogAnimationMargins();
		
					curBlogMarginDest = curBlogMarginDest - blogAnimNext;
		
					blogCarousel.jacked({
						marginLeft: curBlogMarginDest
					}, {
						duration: 750
					});
		            
					//Large/small carousel
					if (contWidth == 1000 && blogRightRemaining >= 2 && !isHalfCarousel) {
						blogRightRemaining = blogRightRemaining - numBlogShowing;
						blogLeftRemaining = blogLeftRemaining + numBlogShowing;
					} else if (contWidth == 1000 && blogRightRemaining < 2 && !isHalfCarousel) {
		
						blogLeftRemaining = blogLeftRemaining + blogRightRemaining;
						blogRightRemaining = blogRightRemaining - blogRightRemaining;
		
					}
					
					//Half carousel
					if (contWidth == 1000 && blogRightRemaining >= 1 && isHalfCarousel) {
						blogRightRemaining = blogRightRemaining - numBlogShowing;
						blogLeftRemaining = blogLeftRemaining + numBlogShowing;
					}
					else if (contWidth == 1000 && blogRightRemaining < 1 && isHalfCarousel) {
		
						blogLeftRemaining = blogLeftRemaining + blogRightRemaining;
						blogRightRemaining = blogRightRemaining - blogRightRemaining;
		
					}

					
					if (contWidth < 1000) {
						blogRightRemaining = blogRightRemaining - numBlogShowing;
						blogLeftRemaining = blogLeftRemaining + numBlogShowing;
					}
		
				} else {
		
					curBlogMarginDest = 0;
					blogLeftRemaining = 0;
					blogRightRemaining = blogItemTotal - numBlogShowing;
		
					blogCarousel.jacked({
						marginLeft: curBlogMarginDest
					}, {
						duration: 750
					});
		
				}
		
				if (blogAuto && !mouseOverBlogNav) {
					blogInterval = setInterval(handleBlogNext, blogIntervalDelay + 750);
				}
			}
		
			function handleBlogPrevious() {
		
				if (blogLeftRemaining > 0) {
		
					setBlogAnimationMargins();
		
					curBlogMarginDest = curBlogMarginDest + blogAnimPrevious;
		
					blogCarousel.jacked({
						marginLeft: curBlogMarginDest
					}, {
						duration: 750
					});
		            
					//Large/small carousel
					if (contWidth == 1000 && blogLeftRemaining >= 2 && !isHalfCarousel) {
						blogRightRemaining = blogRightRemaining + numBlogShowing;
						blogLeftRemaining = blogLeftRemaining - numBlogShowing;
					} else if (contWidth == 1000 && blogLeftRemaining < 2 && !isHalfCarousel) {
						blogRightRemaining = blogRightRemaining + blogLeftRemaining;
						blogLeftRemaining = blogLeftRemaining - blogLeftRemaining;
					}
					
					//Half carousel
					if (contWidth == 1000 && blogLeftRemaining >= 1 && isHalfCarousel) {
						blogRightRemaining = blogRightRemaining + numBlogShowing;
						blogLeftRemaining = blogLeftRemaining - numBlogShowing;
					} else if (contWidth == 1000 && blogLeftRemaining < 1 && isHalfCarousel) {
						blogRightRemaining = blogRightRemaining + blogLeftRemaining;
						blogLeftRemaining = blogLeftRemaining - blogLeftRemaining;
					}
		
					if (contWidth < 1000) {
						blogRightRemaining = blogRightRemaining + numBlogShowing;
						blogLeftRemaining = blogLeftRemaining - numBlogShowing;
					}
		
				}
		
			}
		
			function resizeBlogCarousel() {
				
				if(hasBlogCarousel){
		
					if (contWidth == 1000) {
						blogItemMargin = isSmallBlogCarousel ? 17: 20;
					}
					if (contWidth == 768) {
						blogItemMargin = isSmallBlogCarousel ? 82: 169;
						if(isHalfCarousel){
							blogItemMargin = 63;
						}
					}
					if (contWidth == 420) {
						blogItemMargin = isSmallBlogCarousel ? 41: 117;
					}
					if (contWidth == 300) {
						blogItemMargin = isSmallBlogCarousel ? 75: 57;
					}
			
					blogCarouselWidth = blogItemTotal * (blogItemWidth + blogItemMargin) + 20;
			
					//set width of carousel ul
					blogCarousel.css({
						width: blogCarouselWidth + 'px'
					});
				
				}
		
			}
		
			function resetBlogCarousel() {
				
				if(hasBlogCarousel){
		
					resizeBlogCarousel();
					setBlogShowing();
					curBlogMarginDest = 0;
					BlogLeftRemaining = 0;
					blogRightRemaining = blogItemTotal - numBlogShowing;
			
					blogCarousel.css({
						marginLeft: 0
					});
				
				}
		
			}
		
			function setBlogShowing() {
		
				if (contWidth == 1000) {
					numBlogShowing = isHalfCarousel ? 1 : 2;
				} else {
					numBlogShowing = 1;
				}
		
			}
		
			function setBlogAnimationMargins() {
		
				if (contWidth == 1000) {
					
		            if(!isHalfCarousel){
						
						if (blogRightRemaining >= 2) {
							blogAnimNext = isSmallBlogCarousel ? 712: 980;
						} else {
							blogAnimNext = isSmallBlogCarousel ? 356 * blogRightRemaining: 490 * blogRightRemaining;
						}
			
						if (blogLeftRemaining >= 2) {
			
							blogAnimPrevious = isSmallBlogCarousel ? 712: 980;
						} else {
							blogAnimPrevious = isSmallBlogCarousel ? 356 * blogRightRemaining: 490 * blogLeftRemaining;
						}
						
					}
					else{
						
						if (blogRightRemaining >= 1) {
							blogAnimNext = 490;
						} else {
							blogAnimNext = 490 * blogRightRemaining;
						}
			
						if (blogLeftRemaining >= 1) {
			
							blogAnimPrevious = 490;
						} else {
							blogAnimPrevious = 490 * blogRightRemaining;
						}
						
					}
		
				}
		
				if (contWidth == 768) {
		            
					blogAnimNext = blogAnimPrevious = isSmallBlogCarousel ? 421: 639;
					if(isHalfCarousel){
					   blogAnimNext = 331;	
					}
				}
		
				if (contWidth == 420) {
					blogAnimNext = blogAnimPrevious = isSmallBlogCarousel ? 380: 344;
				}
		
				if (contWidth == 300) {
					blogAnimNext = blogAnimPrevious = isSmallBlogCarousel ? 236: 284;
				}
		
			}
			
			/////////////////////////////////
			$(window).resize(function() {

					setBlogAnimationMargins();
					resetBlogCarousel();
			});
		
		});

    }


    

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //FEATURED CAROUSEL
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initPortfolioCarousel() {
		
        $('.carousel.portfolio').each(function() {
											   
			var portfolioCarousel = $(this);
			var isSmallCarousel = portfolioCarousel.parent().hasClass('small') ? true: false;
			var isHalfCarousel = portfolioCarousel.parent().parent().hasClass('onehalf') ? true: false;
			
			
			
			//We only allow .one and .onehalf for large carousel, so first check that, if not show message
			if(!isSmallCarousel){
				if(!portfolioCarousel.parent().parent().hasClass('one') && !portfolioCarousel.parent().parent().hasClass('onehalf')){
					$('<h4>ERROR!</h4><p>Only .one and .onehalf carousel are allowed!</p>').appendTo(portfolioCarousel.parent());
					portfolioCarousel.remove();
					return;
				}
			}

			var portfolioNext = portfolioCarousel.parent().parent().find('.carouselNext');
			var portfolioPrevious = portfolioCarousel.parent().parent().find('.carouselPrevious');
			var portfolioCarouselWrapper = portfolioCarousel.parent();
			var portfolioNav = portfolioCarousel.parent().parent().find('.carouselNav');
	
			var portfolioItemTotal = portfolioCarousel.children().length;
	
			var portfolioItemWidth = isSmallCarousel ? 161: 225;
			var portfolioItemHeight = isSmallCarousel ? 197: 245;
			var curPortfolioMarginDest = 0;
			
			var portfolioAuto = portfolioCarousel.attr('data-autoPlay') == "true" ? true: false;
			var portfolioIntervalDelay = parseInt(portfolioCarousel.attr('data-autoDelay'), 10);
			var mouseOverPortfolioNav = false;
			
			var numPortfolioShowing;
			var portfolioInterval;
	
			//make sure carousel has margin=0
			resetPortfolioCarousel();
	
			//calculate animation margins
			setPortfolioAnimationMargins();
	
			//set up item counting
			var portfolioLeftRemaining = 0;
			var portfolioRightRemaining = portfolioItemTotal - numPortfolioShowing;
	
			portfolioNext.click(function() {
				handlePortfolioNext();
			});
	
			portfolioPrevious.click(function() {
				handlePortfolioPrevious();
			});
	
			//auto play
			if (portfolioAuto) {
	
				//setup interval
				clearInterval(portfolioInterval);
				portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay);
	
				//handle carousel mouse over to stop interval
				portfolioCarouselWrapper.mouseenter(function() {
					clearInterval(portfolioInterval);
				});
	
				portfolioCarouselWrapper.mouseleave(function() {
					clearInterval(portfolioInterval);
					portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay);
				});
	
				//handle navigation mouse over to stop interval
				portfolioNav.mouseenter(function() {
					mouseOverPortfolioNav = true;
					clearInterval(portfolioInterval);
				});
	
				portfolioNav.mouseleave(function() {
					mouseOverPortfolioNav = false;
					clearInterval(portfolioInterval);
					portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay);
				});
	
			}
	
			//add touch swipe event handlers only if viewed from mobile
			if (isMobile) {
				portfolioCarouselWrapper.swipe({
					swipe: function(event, direction, distance, duration, fingerCount) {
						if (direction == 'left') {
							handlePortfolioNext();
						}
	
						if (direction == 'right') {
							handlePortfolioPrevious();
						}
					}
				});
			}
	
			//handle mouse events on featured items
			handlePortfolioItemMouseEvents();

			function handlePortfolioItemMouseEvents() {

				//text hover
				var pItem = portfolioCarousel.find('li');
		
				pItem.each(function() {
		
					var it = $(this);
					var tx = it.find('article');
		
					tx.click(function() {
		
						var t = $(this);
						window.open(t.attr('data-targetURL'), '_self');
		
					});
		
				});
		
			}
		
			function handlePortfolioNext() {
		
				clearInterval(portfolioInterval);
		
				if (portfolioRightRemaining > 0) {
		
					setPortfolioAnimationMargins();
		
					curPortfolioMarginDest = curPortfolioMarginDest - portfolioAnimNext;
		
					portfolioCarousel.jacked({
						marginLeft: curPortfolioMarginDest
					}, {
						duration: 750
					});
		            
					//Large/small carousel
					if (contWidth == 1000 && portfolioRightRemaining >= 4 && !isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;
					} else if (contWidth == 1000 && portfolioRightRemaining < 4 && !isHalfCarousel) {
		
						portfolioLeftRemaining = portfolioLeftRemaining + portfolioRightRemaining;
						portfolioRightRemaining = portfolioRightRemaining - portfolioRightRemaining;
		
					}
					
					//Half carousel
					if (contWidth == 1000 && portfolioRightRemaining >= 2 && isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;
					} else if (contWidth == 1000 && portfolioRightRemaining < 2 && isHalfCarousel) {
		
						portfolioLeftRemaining = portfolioLeftRemaining + portfolioRightRemaining;
						portfolioRightRemaining = portfolioRightRemaining - portfolioRightRemaining;
		
					}
		            
					//Large/small carousel
					if (contWidth == 768 && portfolioRightRemaining >= 3 && !isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;
		
					} else if (contWidth == 768 && portfolioRightRemaining < 3 && !isHalfCarousel) {
		
						portfolioLeftRemaining = portfolioLeftRemaining + portfolioRightRemaining;
						portfolioRightRemaining = portfolioRightRemaining - portfolioRightRemaining;
					}
					
					//Half carousel
					if (contWidth == 768 && portfolioRightRemaining >= 1 && isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;
		
					} else if (contWidth == 768 && portfolioRightRemaining < 1 && isHalfCarousel) {
		
						portfolioLeftRemaining = portfolioLeftRemaining + portfolioRightRemaining;
						portfolioRightRemaining = portfolioRightRemaining - portfolioRightRemaining;
					}
		
					if (contWidth == 420 || contWidth == 300) {
						portfolioRightRemaining = portfolioRightRemaining - numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining + numPortfolioShowing;
					}
		
				} else {
		
					curPortfolioMarginDest = 0;
					portfolioLeftRemaining = 0;
					portfolioRightRemaining = portfolioItemTotal - numPortfolioShowing;
		
					portfolioCarousel.jacked({
						marginLeft: curPortfolioMarginDest
					}, {
						duration: 750
					});
		
				}
		
				if (portfolioAuto && !mouseOverPortfolioNav) {
					portfolioInterval = setInterval(handlePortfolioNext, portfolioIntervalDelay + 750);
				}
			}
		
			function handlePortfolioPrevious() {
		
				if (portfolioLeftRemaining > 0) {
		
					setPortfolioAnimationMargins();
		
					curPortfolioMarginDest = curPortfolioMarginDest + portfolioAnimPrevious;
		
					portfolioCarousel.jacked({
						marginLeft: curPortfolioMarginDest
					}, {
						duration: 750
					});
		            
					
					//Large/small carousel
					if (contWidth == 1000 && portfolioLeftRemaining >= 4 && !isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
					} else if (contWidth == 1000 && portfolioLeftRemaining < 4 && !isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + portfolioLeftRemaining;
						portfolioLeftRemaining = portfolioLeftRemaining - portfolioLeftRemaining;
					}
					
					//Half carousel
					if (contWidth == 1000 && portfolioLeftRemaining >= 2 && isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
					} else if (contWidth == 1000 && portfolioLeftRemaining < 2 && isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + portfolioLeftRemaining;
						portfolioLeftRemaining = portfolioLeftRemaining - portfolioLeftRemaining;
					}
		            
					//Large/small carousel
					if (contWidth == 768 && portfolioLeftRemaining >= 3 && !isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
					} else if (contWidth == 768 && portfolioLeftRemaining < 3 && !isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + portfolioLeftRemaining;
						portfolioLeftRemaining = portfolioLeftRemaining - portfolioLeftRemaining;
					}
					
					//Large/small carousel
					if (contWidth == 768 && portfolioLeftRemaining >= 1 && isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
					} else if (contWidth == 768 && portfolioLeftRemaining < 1 && isHalfCarousel) {
						portfolioRightRemaining = portfolioRightRemaining + portfolioLeftRemaining;
						portfolioLeftRemaining = portfolioLeftRemaining - portfolioLeftRemaining;
					}
		
					if (contWidth == 420 || contWidth == 300) {
						portfolioRightRemaining = portfolioRightRemaining + numPortfolioShowing;
						portfolioLeftRemaining = portfolioLeftRemaining - numPortfolioShowing;
					}
		
				}
		
			}
		
			function resizePortfolioCarousel() {
				
				if (hasPortfolioCarousel) {
		
					if (contWidth == 1000) {
						portfolioItemMargin = isSmallCarousel ? 17: 20;
					}
					if (contWidth == 768) {
						portfolioItemMargin = isSmallCarousel ? 10: 26;
						if(isHalfCarousel){
							portfolioItemMargin = 129;
						}
					}
					if (contWidth == 420) {
						portfolioItemMargin = isSmallCarousel ? 34: 117;
					}
					if (contWidth == 300) {
						portfolioItemMargin = isSmallCarousel ? 70: 57;
					}
			
					portfolioCarouselWidth = portfolioItemTotal * (portfolioItemWidth + portfolioItemMargin);
			
					//set width of carousel ul
					portfolioCarousel.css({
						width: portfolioCarouselWidth + 'px'
					});
				
				}
		
			}
		
			function resetPortfolioCarousel() {
				
				if (hasPortfolioCarousel) {
		
					resizePortfolioCarousel();
					setPortfolioShowing();
					curPortfolioMarginDest = 0;
					portfolioLeftRemaining = 0;
					portfolioRightRemaining = portfolioItemTotal - numPortfolioShowing;
			
					portfolioCarousel.css({
						marginLeft: 0
					});
				
				}
		
			}
		
			function setPortfolioAnimationMargins() {
		
				if (contWidth == 1000) {
					
					//small and large carousel
		            if(!isHalfCarousel){
						if (portfolioRightRemaining >= 4) {
							portfolioAnimNext = isSmallCarousel ? 712: 980;
						} else {
							portfolioAnimNext = isSmallCarousel ? 178 * portfolioRightRemaining: 245 * portfolioRightRemaining;
						}
			
						if (portfolioLeftRemaining >= 4) {
			
							portfolioAnimPrevious = isSmallCarousel ? 712: 980;
						} else {
							portfolioAnimPrevious = isSmallCarousel ? 178 * portfolioRightRemaining: 245 * portfolioLeftRemaining;
						}
					}
					//half carousel
		            else if(isHalfCarousel){
						if (portfolioRightRemaining >= 2) {
							portfolioAnimNext  = 490;
						} else {
							portfolioAnimNext = 245 * portfolioRightRemaining;
						}
			
						if (portfolioLeftRemaining >= 2) {
			
							portfolioAnimPrevious = 490;
						} else {
							portfolioAnimPrevious = 245 * portfolioLeftRemaining;
						}
					}
		
				}
		
				if (contWidth == 768) {
		            
					if(!isHalfCarousel){
						
						if (portfolioRightRemaining >= 3) {
							portfolioAnimNext = isSmallCarousel ? 513: 753;
						} else {
							portfolioAnimNext = isSmallCarousel ? 171 * portfolioRightRemaining: 251 * portfolioRightRemaining;
						}
			
						if (portfolioLeftRemaining >= 3) {
			
							portfolioAnimPrevious = isSmallCarousel ? 513: 753;
						} else {
							portfolioAnimPrevious = isSmallCarousel ? 171 * portfolioRightRemaining: 251 * portfolioRightRemaining;
						}
						
					}
					else {
						portfolioAnimNext = 315;
						portfolioAnimPrevious = 315;

					}
					
					
				}
		
				if (contWidth == 420) {
		
					if (isSmallCarousel) {
		
						if (portfolioRightRemaining >= 2) {
							portfolioAnimNext = 390;
						} else {
							portfolioAnimNext = 195 * portfolioRightRemaining;
						}
					} else {
						portfolioAnimNext = 342;
					}
		
				}
				if (contWidth == 300) {
					portfolioAnimNext = portfolioAnimPrevious = isSmallCarousel ? 231: 282;
				}
		
			}
		
			function setPortfolioShowing() {
		
				if (contWidth == 1000) {
					if(!isHalfCarousel){
					  numPortfolioShowing = 4;
					}
					else{
					  numPortfolioShowing = 2;
					}
				}
				if (contWidth == 768) {
					if(!isHalfCarousel){
					  numPortfolioShowing = 3;
					}
					else{
					  numPortfolioShowing = 1;
					}
				}
				if (contWidth == 420) {
					numPortfolioShowing = isSmallCarousel ? 2: 1;
				}
				if (contWidth == 300) {
					numPortfolioShowing = 1;
				}
		
			}
			
			
			/////////////////////////////////
			$(window).resize(function() {

					setPortfolioAnimationMargins();
					resetPortfolioCarousel();
			});
			
		});

    }

    

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //ISOTOPE PORTFOLIO
    /////////////////////////////////////////////////////////////////////////////////////////////////////////

    function initIsotopePortfolio() {

        //check if portfolio exists
        if (mainContainer.find('section').hasClass('isotopeContainer')) {
			
			isIsotope = true;
			isotopePagination = $(".pagination");
			
			$('.isotopeContainer').each(function() {

				var cont = $(this);
				var opts = cont.prev(".isotopeFilters").find("a");
				
				var isotopeFilters = cont.prev(".isotopeFilters").find("ul");
				var isotopeDropdown = cont.prev(".isotopeFilters").find("form");
				var isotopeSelect = cont.prev(".isotopeFilters").find("select");
				var filter = "*";
				var optionSet = cont.prev('.isotopeFilters').find(".option-set");
	
				isotope3Col = cont.find('.element').hasClass('onethird');
				cont.find(".element:even").addClass('odd');
				
				//wait for images to load then start isotope
				cont.imagesLoaded( function(){
				  cont.isotope({
					filter: filter
				  });
				});
			
				//set current menu
				opts.each(function() {
	
					var $this = $(this);
	
					if ($this.attr('data-filter') == filter) {
	
						$this.addClass('selected');
						$this.parent().addClass('selected');
					}
				});
	
				opts.click(function() {
					var $this = $(this);
					
					// don't proceed if already selected
					if ($this.hasClass('selected')) {
						return false;
					}

					var val = $(this).attr('data-filter');
					optionSet.find('.selected').removeClass('selected');
					$this.addClass('selected');
					$this.parent().addClass('selected');
	
					//dropdown
					$('option:selected', '.isotopeFilters select').removeAttr('selected');
					isotopeFilters.find('select option[value="' + val + '"]').attr("selected", "selected");
	
	
					cont.isotope({
						filter: val
					});
	
					return false;
				});
	
				handleIsotopeMouseEvents(cont);
	
				//check opts width
				//isotopeFilterWidth = isotopeFilters.width();
				//isotopeFilterHeight = isotopeFilters.height();
				checkIsotopeFilterWidth();
				//isotopePaginationWidth = isotopePagination.width();
				checkIsotopePaginationWidth();
	
				//populate responsive dropdown
				opts.each(function() {
					var el = $(this);
					$("<option />", {
						"value": el.attr("data-filter"),
						"text": el.text()
						}).appendTo(isotopeSelect);
				});
	
				isotopeSelect.change(function() {
	
					var filterVal = $(this).find("option:selected").val();
	
					opts.each(function() {
						var el = $(this);
						var filter = el.attr('data-filter');
						if (filter == filterVal) {
	
							//check if already selected and kill if true
							if (el.hasClass('selected')) {
								return false;
							} else {
								optionSet.find('.selected').removeClass('selected');
								el.addClass('selected');
								el.parent().addClass('selected');
								cont.isotope({
									filter: filterVal
								});
							}
						}
					});
	
				});
			
			});
			
			
			

        }

    }

    function handleIsotopeMouseEvents(cont) {

        var ct = cont;

        //text
        var pItem = ct.find('.element');

        pItem.each(function() {

            var it = $(this);
            var tx = it.find('.portfolioText');

            tx.click(function() {
                var t = $(this);
                window.open(t.attr('data-targetURL'), '_self');
            });

        });

    }

    function checkIsotopeFilterWidth() {
		
		
		$('.isotopeContainer').each(function() {
											 
			var cont = $(this);								 
			var isotopeFilters = cont.prev(".isotopeFilters").find("ul");
			var isotopeDropdown = cont.prev(".isotopeFilters").find("form");
			var isotopeFilterWidth = isotopeFilters.width();

			if (isotopeFilterWidth > contWidth || contWidth < 420) {
				isotopeFilters.addClass('hidden');
				isotopeDropdown.removeClass('hidden');
			} else {
				isotopeFilters.removeClass('hidden');
				isotopeDropdown.addClass('hidden');
			}
	
			if (contWidth <= 420 && !isotopeFilters.hasClass('hidden')) {
				var destRight = (contWidth - isotopeFilterWidth) / 2;
				isotopeFilters.css({
					marginRight: destRight + 'px'
				});
			} else {
				isotopeFilters.css({
					marginRight: 20 + 'px'
				});
			}
	
			if (!isotopeDropdown.hasClass('hidden')) {
				var destLeft = (contWidth - isotopeDropdown.width()) / 2;
				isotopeDropdown.css({
					marginLeft: destLeft + 'px'
				});
			}
		
		});

    }

    function checkIsotopePaginationWidth() {
		
		var isotopePaginationWidth = isotopePagination.width();

        if (contWidth <= 420) {
            var destRight = (contWidth - isotopePaginationWidth) / 2;
            isotopePagination.css({
                marginRight: destRight + 'px'
            });
        } else {
            isotopePagination.css({
                marginRight: 20 + 'px'
            });
        }

    }

    

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //WINDOW RESIZE FUNCTIONS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function calculateBgDimensions() {

        if (img) {

            imgWidth = img.width();
            imgHeight = img.height();

            winWidth = $(window).width();
            winHeight = $(window).height();

            widthRatio = winWidth / imgWidth;
            heightRatio = winHeight / imgHeight;

            widthDiff = heightRatio * imgWidth;
            heightDiff = widthRatio * imgHeight;
	
        }

    }

    function handleWindowResize() {

        calculateBgDimensions();
        
		if(bgType == 'image'){
          resizeBgImage();
		}

    }

    function resizeBgImage() {

    	if(getResizedImgWidth() != 0 && getResizedImgHeight() != 0){
			
			if (img) {
				img.css({
					width: getResizedImgWidth() + 'px',
					height: getResizedImgHeight() + 'px'
				});
	
			}
			if($('.headerWrapper') && $('.headerWrapper').find('#blurMask').length > 0 && !$('#fullwidthslider').length){
				if (supportsCanvas) {
					$('#blurCanvas').css({
						width: getResizedImgWidth() + 'px',
						height: getResizedImgHeight() + 'px',
						position: 'absolute',
						top: ($('.container').width() > 300) ? -90 + scrollTop + 'px': -200 + scrollTop + 'px',
						left: -(winWidth - $('.container').width()) / 2
					});
				} else {
					if(!isIE8 || isIE8 && winWidth>1040 && !$('#fullwidthslider').length){
						$('#blurMask img').css({
							'width': getResizedImgWidth() + 'px',
							'height': getResizedImgHeight() + 'px',
							position: 'absolute',
							top: ($('.container').width() > 300) ? -90 - IEBlurRadius + scrollTop + 'px': -200 + scrollTop + 'px',
							left: -(winWidth - $('.container').width()) / 2 - IEBlurRadius
			
						});
					}
				}
			}
		
		}

    }

    function getResizedImgWidth() {

        calculateBgDimensions();

        if (heightDiff > winHeight) {
			
            return winWidth;	

        } else {

            return widthDiff;

        }
    }

    function getResizedImgHeight() {

        calculateBgDimensions();

        if (heightDiff > winHeight) {

            return heightDiff;

        } else {

            return winHeight;
        }

    }
	
	function setFullBg(){
		
		var contentBg = $('.contentBgFull');
		var tFooterBg = $('.footerBgFull');
		var sFooterBg = $('.subFooterBgFull');
		var hBg = $('.headerBg').not('.contactInfoItem .headerBg');
		var hcBg = $('.headerContentBg');
		var ct = $('.boxed .container');
		
		var layoutCookie = getCookie('tmplLayout');

		if(!isBoxedLayout || contWidth<=420){
			
			

			var w = $(window).width();
			var l = (w-contWidth)/2;
			
			
			
			//main content bg
			contentBg.css({
				width: w + 'px',
				left: -l + 'px'
			});
			
			//top footer bg
			tFooterBg.css({
				width: w + 'px',
				left: -l + 'px'
			});
			
			//sub footer bg
			sFooterBg.css({
				width: w + 'px',
				left: -l + 'px'
			});
			
			if(layoutCookie != 'boxed'){
				hBg.css('visibility', 'visible');
				hcBg.css('visibility', 'visible');
				contentBg.css('visibility', 'visible');
				tFooterBg.css('visibility', 'visible');
				sFooterBg.css('visibility', 'visible');
			}
			
			ct.css({
            '-webkit-box-shadow': '0px 0px 10px rgba(0,0,0,0)',
			'-moz-box-shadow': '0px 0px 10px rgba(0,0,0,0)',
			'box-shadow': '0px 0px 10px rgba(0,0,0,0)'
           })
			 
		}
		else{
		    hBg.css('visibility', 'hidden');
			hcBg.css('visibility', 'hidden');
			contentBg.css('visibility', 'hidden');
		    tFooterBg.css('visibility', 'hidden');
		    sFooterBg.css('visibility', 'hidden');
			
			ct.css({
            '-webkit-box-shadow': '0px 0px 10px rgba(0,0,0,0.1)',
			'-moz-box-shadow': '0px 0px 10px rgba(0,0,0,0.1)',
			'box-shadow': '0px 0px 10px rgba(0,0,0,0.1)'
           })
			
		}
	
	}

		

    /////////////////////////////////
    $(window).resize(function() {
							  
			
		    clearSubArrow();
			resizeBgImage();
			
	
			contWidth = mainContainer.width();
			contHeight = mainContainer.height();
			
			setFullBg();
	
			//Only reset if the container width has changed
			if (contWidth != prevContWidth && !isIE8) {
	
				prevContWidth = contWidth;
				prevContHeight = contHeight;
				
	
				if (isIsotope) {
					checkIsotopeFilterWidth();
					checkIsotopePaginationWidth();
					$(".isotopeContainer").isotope('reLayout');
				}
	
				if (!isHomePage) {
					alignPageTitle();
				}
	
				checkMenuWidth();
				handleGoogleMap();
				resetMiniSliders();
				initComparison();
				checkTabSize();
	
			}
	
	

    });

    $(window).scroll(function() {
        scrollTop = $(window).scrollTop();
        resizeBgImage();
    });

    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    //HELPERS
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function getMouseXY(e) {

        if (e && e.pageX) {
            mouseX = e.pageX;
            mouseY = e.pageY;
        } else {
            mouseX = event.clientX;
            mouseY = event.clientY;
        }
        // catch possible negative values
        if (mouseX < 0) {
            mouseX = 0;
        }
        if (mouseY < 0) {
            mouseY = 0;
        }

        var tip = $('body').find('.tooltip');

        tip.css({
            position: 'absolute'

        }).jacked({
            left: mouseX - tip.width() / 2 - 3,
            top: mouseY - 55
        }, {
            duration: 500
        });

    }

	
	/////////////////////////////////////////////////////////////////////////////////////////////////////////
    //ODD CLASSES
    /////////////////////////////////////////////////////////////////////////////////////////////////////////
    function addOddClasses() {

        $("section").each(function() {
            var s = $(this);
            s.find('.onethird:even').addClass('odd');
            s.find('.onefifth:even').addClass('odd');
        });

        if (mainContainer.find('section').hasClass('comparison')) {

            $(".comparison").each(function() {
                var s = $(this);
                var u = s.find('article ul');

                u.each(function() {
                    var ul = $(this);
                    ul.find('li:even').addClass('odd');
                });
            });

        }
    }
	
	
	
	function checkBlogPaginationWidth() {
        if (mainContainer.find('article').hasClass('blog')) {
			
			var pag = mainContainer.find('.pagination');
			var w = pag.outerWidth();
			if (contWidth <= 420) {
				var destRight = (contWidth - w) / 2;
				pag.css({
					marginRight: destRight + 'px'
				});
			} else {
				pag.css({
					marginRight: 0 + 'px'
				});
			}
        }

    }
	
	
	
	
	

})(jQuery);